@model PortalMonti.Domain.Model.Chat

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>ChatApp</title>

    <link rel="stylesheet" href="~/css/site2.css">

</head>

<body>

    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/css/chatroom.css" rel="stylesheet" />

    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card chat-app">
                    <div id="plist" class="people-list">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-search"></i></span>
                            </div>
                            <input type="text" class="form-control" placeholder="Search...">
                        </div>
                        <ul class="list-unstyled chat-list mt-2 mb-0">
                            @foreach (var friend in ViewBag.friends)
                                {
                            <li class="clearfix">
                                <a  asp-controller="Home" asp-action="ChatPrv" asp-route-appUserId="@friend.AuthorId">
                                    <img src="~/upload/@friend.UserPhoto" alt="avatar" style="display: inline;width:50px;height:50px;">
                                    <div class="about"style=" width:75%; ">
                                        <span class="name" style="display: inline" >@friend.Email</span>
                                        <div class="status"> <i class="fa fa-circle offline"></i> left 7 mins ago </div>
                                    </div>
                                </a>
                            </li>
                                }
                        </ul>
                    </div>
                    <div class="chat">
                        <div class="chat-header clearfix">
                            <div class="row">
                                <div class="col-lg-6">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                        <img src="~/upload/@ViewBag.UserToChat.ImageProfile" alt="avatar">
                                    </a>
                                    <div class="chat-about">

                                        <h6 class="m-b-0">@ViewBag.UserToChat.Email</h6>
                                        <small>
                                            Aktywny 10 minut temu..
                                        </small>
                                    </div>
                                </div>
                                <div class="col-lg-6 hidden-sm text-right">
                                    <a href="javascript:void(0);" class="btn btn-outline-secondary"><i class="fa fa-camera"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-primary"><i class="fa fa-image"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-info"><i class="fa fa-cogs"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-warning"><i class="fa fa-question"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="chat-history" id="chat-history">
                            @if (Model.Messages == null)
                            {
                            <div>adsfasdasdas</div>
                            }
                            else
                            {
                            @foreach (var message in Model.Messages)
                                {
                                    if (message.Name==ViewBag.User.Email)
                                    {
                            <ul class="m-b-0">

                                <li class="clearfix">
                                    <div class="message-data text-right">
                                        <span class="message-data-time">@message.Timestamp</span>
                                    </div>
                                    <div class="message other-message float-right" >@message.Text</div>
                                </li>
                            </ul>
                                    }
                                    else
                                    {


                            <ul class="m-b-0">
                                <li class="clearfix">
                                    <div class="message-data">
                                        <img src="~/upload/@ViewBag.UserToChat.ImageProfile" alt="avatar">
                                        <span class="message-data-time">@message.Timestamp</span>

                                    </div>
                                    <div class="message my-message "> @message.Text </div>
                                    
                                </li>

                            </ul>
                                    }
                           
                                }
                            }

                        </div>
                        <div class="chat-message clearfix">

                            <form class="input-group mb-0" onsubmit="sendMessage(event)">
                                <div class="input-group-prepend">
                                    <input type="hidden" name="chatId" value="@Model.Id">
                                    <input type="hidden" name="roomName" value="@Model.Name">
                                    <input type="hidden" name="appUserId" value="@ViewBag.UserToChat.Id"> @*//do notyfikacji*@
                                
                                </div>
                                <input type="text" name="message" id="message-input" class="form-control">
                                <button class="input-group-text" type="submit"><i class="fa fa-send"></i></button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    
    <input type="hidden" id="UserEmail" value="@ViewBag.UserToChat.Email">  @*//ukryty input aby przekazac go do javascript i wiedziac jak ukladac wiadomosci(kto jest nadawca)*@

   



    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="~/js/site.js"></script>
    <script src="/lib/jquery/dist/jquery.min.js"></script>

    

    <script>



        var d = $('#chat-history');
        d.scrollTop(d.prop("scrollHeight")); //Przewijanie diva z wiadomosciami na sam doł

        var UserLogin = $("#UserEmail").val();  //pobieranie e-mail usera(z div id="UserEmail") zeby ustawic style wiadomosci


        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        var _connectionId = '';



        connection.on("RecieveMessage", function (data) {
            //var pow = $('<span/>', {
            //    'id': 'notifications',
            //    'class': 'badge rounded-pill badge-notification bg-danger',
            //    'text': '.',
            //});

            //var dzwonekpow = document.getElementById('dzwonekPow');
            //pow.appendTo(dzwonekpow);  //POWIADOMIENIA

            var message = document.createElement("ul")
            message.classList.add('m-b-0')
            if (UserLogin != data.name) {//sprawdzam czy wczesniej podany userlopgin nalzy do odbiorcy/nadawcy
                var li = document.createElement("li")
                li.classList.add("clearfix")

                var span = document.createElement("span");
                span.classList.add("message-data-time");
                span.appendChild(document.createTextNode(data.timestamp));

                var div1 = document.createElement("div")
                div1.classList.add("message-data")
                div1.classList.add("text-right")
                div1.appendChild(span); //dolaczam wczesniej span do div1 aby byl w srodku div(wystylizowana data)


                var div2 = document.createElement("div");
                div2.classList.add("message");
                div2.classList.add("other-message");
                div2.classList.add("float-right");
                div2.appendChild(document.createTextNode(data.text))

                message.appendChild(li);
                message.appendChild(div1);
                //message.appendChild(span);
                message.appendChild(div2);

                var body = document.querySelector('.chat-history')
                body.append(message);

                d.scrollTop(d.prop("scrollHeight"));  //przewijanie w dol okna z chatem

            } else {
                var li = document.createElement("li")
                li.classList.add("clearfix")

                var span = document.createElement("span");
                span.classList.add("message-data-time");
                span.appendChild(document.createTextNode(data.timestamp));

                var div1 = document.createElement("div")
                div1.classList.add("message-data")
                div1.appendChild(span);

                var div2 = document.createElement("div");
                div2.classList.add("message");
                div2.classList.add("my-message");
                div2.appendChild(document.createTextNode(data.text));

                message.appendChild(li);
                message.appendChild(div1);
                //message.appendChild(span);
                message.appendChild(div2);

                var body = document.querySelector('.chat-history')
                body.append(message);

                d.scrollTop(d.prop("scrollHeight"));  //przewijanie w dol okna z chatem
            }

        })



        connection.on("RecieveNotification", function (data) {

            var pow = $('<span/>', {
                'id': 'notifications',
                'class': 'badge rounded-pill badge-notification bg-danger',
                'text': '.',
            });

            var dzwonekpow = document.getElementById('dzwonekPow');
            pow.appendTo(dzwonekpow);  //powiadomienia, notyfikacje

           //var pow= jQuery('<span>', {
           //     id: 'notification',
           //     class: 'badge rounded-pill badge-notification bg-danger'
           //  });
           // var pow = document.createElement("span");
           // pow.classList.add("badge rounded-pill badge-notification bg-danger")

           // document.getElementById('dzwonekPow').appendChild(pow);

           // var item = jQuery('<span>', {
           //     id: 'notification',
           //     class: 'badge rounded-pill badge-notification bg-danger'
           // });



        })


        var joinRoom = function () {
            var url='/Chat/JoinRoom/'+ _connectionId+'/@Model.Name'
            axios.post(url, null)
                .then(res => {
                    console.log("dolaczono do pokoju!", res);
                })
                .catch(err => {
                    console.err("nieudalo sie dolaczyc do pokoju", res);
                })
        }
        connection.start()
            .then(function () {
                connection.invoke('GetConnectionId')
                    .then(function (connectionId) {
                        _connectionId = connectionId

                        joinRoom();
                    })
            })
            .catch(function (err) {
                console.log(err)
            })


        var sendMessage = function (event) {
            event.preventDefault();
            var data = new FormData(event.target);

            document.getElementById('message-input').value = '';   //czysczenie inputu "message"

            axios.post('/Chat/SendMessage', data)
                .then(res => {
                    console.log("wiadomosc wyslana")
                })
                .catch(err => {
                    console.log("nie udalo sie wyslac")
                })

            axios.post('/Chat/SendNotification', data)
                .then(res => {
                    console.log("powiadomienie wyslane")
                })
                .catch(err => {
                    console.log("powiadomienie niewyslane")
                })
        }

    </script>
    <script src="~/js/site.js"></script>

</body>

</html>


